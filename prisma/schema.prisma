// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
generator nestjsDto {
  provider                        = "prisma-generator-nestjs-dto"
  output                          = "../src/generated/nestjs-dto"
  outputToNestJsResourceStructure = "false"
  exportRelationModifierClasses   = "true"
  reExport                        = "false"
  createDtoPrefix                 = "Create"
  updateDtoPrefix                 = "Update"
  dtoSuffix                       = "Dto"
  entityPrefix                    = ""
  entitySuffix                    = ""
  fileNamingStyle                 = "camel"
}

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model School {
  id              Int    @id @default(autoincrement())
  school_name     String
  school_location String
  users           User[]
}

model User {
  id           Int     @id @default(autoincrement())
  school       School  @relation(fields: [school_id], references: [id])
  school_id    Int // relation scalar field  (used in the `@relation` attribute above)
  first_name   String  @db.VarChar(50)
  last_name    String  @db.VarChar(50)
  email        String  @unique
  address      String  @db.VarChar(255)
  phone_number String? @unique

  Request Request[]
  Driver  Driver[]
}

model Driver {
  driver_id Int  @id @default(autoincrement())
  User      User @relation(fields: [user_id], references: [id])
  user_id   Int

  Ride Ride[]
}

model Request {
  id Int @id @default(autoincrement())

  requester          User   @relation(fields: [requester_id], references: [id])
  requester_id       Int    @unique
  requester_location String

  requested_ride    Ride @relation(fields: [requested_ride_id], references: [ride_id])
  requested_ride_id Int

  status Boolean @default(false)
}

model Ride {
  ride_id            Int       @id @default(autoincrement())
  passenger_requests Request[]
  passenger_id       Int

  Driver    Driver @relation(fields: [driver_id], references: [driver_id])
  driver_id Int

  date_of_ride       String
  number_of_seats    Int
  departure_location String
  school_location    String
}
